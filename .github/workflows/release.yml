name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build-binaries:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'

    - name: Install cross-compilation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu gcc-x86-64-linux-gnu

    - name: Build binaries
      run: |
        # Linux AMD64
        CGO_ENABLED=1 CC=x86_64-linux-gnu-gcc GOOS=linux GOARCH=amd64 go build -o ore-linux-amd64 -ldflags="-s -w -X main.version=${GITHUB_REF_NAME} -X main.buildCommit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" ./cmd/ore

        # Linux ARM64
        CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc GOOS=linux GOARCH=arm64 go build -o ore-linux-arm64 -ldflags="-s -w -X main.version=${GITHUB_REF_NAME} -X main.buildCommit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" ./cmd/ore

        # macOS AMD64 (disable CGO for cross-compilation)
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o ore-darwin-amd64 -ldflags="-s -w -X main.version=${GITHUB_REF_NAME} -X main.buildCommit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" ./cmd/ore

        # macOS ARM64 (disable CGO for cross-compilation)
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o ore-darwin-arm64 -ldflags="-s -w -X main.version=${GITHUB_REF_NAME} -X main.buildCommit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" ./cmd/ore

        # Windows AMD64 (disable CGO for cross-compilation)
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o ore-windows-amd64.exe -ldflags="-s -w -X main.version=${GITHUB_REF_NAME} -X main.buildCommit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" ./cmd/ore

    - name: Create checksums
      run: |
        # Only checksum files, not directories
        sha256sum ore-linux-* ore-darwin-* ore-windows-* > checksums.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          ore-linux-amd64
          ore-linux-arm64
          ore-darwin-amd64
          ore-darwin-arm64
          ore-windows-amd64.exe
          checksums.txt
        retention-days: 90

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ore-linux-amd64
          ore-linux-arm64
          ore-darwin-amd64
          ore-darwin-arm64
          ore-windows-amd64.exe
          checksums.txt
        draft: false
        prerelease: false
        generate_release_notes: true

  build-docker:
    runs-on: ubuntu-latest
    needs: build-binaries
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
