name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Build binaries
      run: |
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -o ore-linux-amd64 -ldflags="-s -w -X main.version=${GITHUB_REF_NAME} -X main.buildCommit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" ./cmd/ore

        # Linux ARM64
        GOOS=linux GOARCH=arm64 go build -o ore-linux-arm64 -ldflags="-s -w -X main.version=${GITHUB_REF_NAME} -X main.buildCommit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" ./cmd/ore

        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -o ore-darwin-amd64 -ldflags="-s -w -X main.version=${GITHUB_REF_NAME} -X main.buildCommit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" ./cmd/ore

        # macOS ARM64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -o ore-darwin-arm64 -ldflags="-s -w -X main.version=${GITHUB_REF_NAME} -X main.buildCommit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" ./cmd/ore

        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -o ore-windows-amd64.exe -ldflags="-s -w -X main.version=${GITHUB_REF_NAME} -X main.buildCommit=${GITHUB_SHA} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" ./cmd/ore

    - name: Create checksums
      run: |
        sha256sum ore-* > checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ore-linux-amd64
          ore-linux-arm64
          ore-darwin-amd64
          ore-darwin-arm64
          ore-windows-amd64.exe
          checksums.txt
        draft: false
        prerelease: false
        generate_release_notes: true
